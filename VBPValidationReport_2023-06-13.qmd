---
title: "Value Based Purchasing Validation Model"
subtitle: "Follow Up After Hospitalization"
author: 
  name: "John Ryan Kivela, MA"
  email: "Ryan.Kivela@narbha.org"
date: today
date-format: long
format:
  html:
    theme: pulse
    embed-resources: true
    toc: true
    toc-depth: 6
    code-fold: true
    footnotes-hover: true
---


```{r}
#| label: Setup
#| include: false
#| echo: false
#| warning: false
#| error: false

## Load Libraries
library(tidyverse)
library(readxl)
library(kableExtra)
library(gt)
library(scales)

# table for inline code
InLineCode <- data.frame(
  ReportDate = "05-31-2023",
  MeasurementYear = "01-01-2023 - 12-31-2023",
  ClaimsAdjudicatedThrough = "03-31-2023",
  HEDISVersion = "My 2023",
  var5 = "Text"
)

```

# Overview

A study was conducted to validate the measurement of HEDIS My2022 [^1] targets utilized in Health Choice's Value-Based Purchasing (VBP) program. Monthly Health Choice VBP Quality Reports (VBPQR) and Health Choice adjudicated claims were used to analyze the validity of reported member events that were counted as Eligible for inclusion in the VBP Program measure, Follow Up after Hospitalization. This assessment found a significant difference between the eligible events reported on the Health Choice VBP Quality Roster and Health Choice Adjudicated Claims. Further investigation is required to confirm valid measurement.

[^1]: <https://www.ncqa.org/hedis/>

## Purpose

The purpose of this model is to investigate the nature and accuracy of Health Choice VBP reporting data when compared against Health Choice adjudicated claims. The results provide the Alliance with information that can be used to make advocacy decisions on behalf of the Alliance Providers.

# Introduction

The Alliance ACO, a subsidiary of Health Choice[^2] and The Narbha Institute[^3], is a behavioral health ACO composed of integrated health homes located throughout the 5 northern counties of Arizona. Alliance Providers (AP) serve medicaid members of the AHCCCS Complete Care program [^4]. The Alliance is a participant in the Health Choice Value Based Purchasing Program. Performance for the ***1/1/2023 - 12/31/2023*** contract year is measured against 3 HEDIS measures endorsed by NCQA. These are *AMM2*, *FUH7*, and *HDO*.

[^2]: <https://www.healthchoiceaz.com/>

[^3]: <https://www.narbha.org/>

[^4]: <https://www.azahcccs.gov/AHCCCS/Initiatives/AHCCCSCompleteCare/>

Alliance Providers have reported that member events, meaning instances that a member is deemed eligible for a given HEDIS measure, have been counted as eligible on their VBP Reports; however, the identified member **does not** appear on their membership rosters, or in their electronic medical record.

In addition, it has been reported by multiple providers that the number of individuals identified in the FUH7 measure is significantly lower than what would be expected, meaning some claims have not been counted that should have been.

This model validates reported eligible member events when compared with adjudicated claims for the same time period. The results of this will give guidance regarding the providers concerns and any potential action steps.

# Method

The ***CRISP-DM*** process for data mining was used for this project [^5]. Cross Industry Standard Process for Data Mining (CRISP-DM) is a workflow that provides structure for data science.

[^5]: <https://www.ibm.com/docs/it/spss-modeler/saas?topic=dm-crisp-help-overview>

## Business Understanding

***Clear Understanding of business objective***

The business objective is to determine if the Alliance Providers (AP) are being measured accurately. Health Choice uses a third party, Cotivity[^6], to measure its NCQA HEDIS goals reported in the VBP Quality Rosters. Concerns have been raised from the providers that they have not been educated on the nature of the VBP reports, do not have easy access to the reports, and that the measurement results are inaccurate. Previous reports have addressed investigations and interventions regarding the first 2 concerns [^7]. This model addresses the concerns regarding accuracy of measurement.

[^6]: <https://www.cotiviti.com/>

[^7]: Kivela J.R., McMillian, J. & Tewa, V. (2023) Alliance ACO Progress Report, January 2023. *The Northern Arizona Regional Behavioral Health Authority*.

***Success Criteria***

Success for this project includes:

1.  A complete understanding of the health plan measurement of HEDIS NCQA targets
2.  Conclusion on the question of accuracy of measurement
3.  A working data model for us as an internal measurement tool, separate from Health Choice and its vendor.

The internal model can be used in the day-to-day management of patient care and provider activity, as well as health plan performance evaluations and payment.

***Situation Assessment***

The Alliance Providers had been in the current state of limited knowledge concerning VBP reporting for multiple years. The VBP Validation Model[^8] provides a tool for viewing and understanding VBP measurement data at a provider and network level.

All of the APs stated a desire to utilize the member level data to improve practice.

[^8]: Kivela, J.R. (2023). Value Based Purchasing Data Validation Model. The Northern Arizona Regional Behavioral Health Alliance

***Translate to analytical objectives (Determine Project Goals)***

1.  Aggregate and evaluate Health Choice Value-Based Purchasing (VBP) Quality Rosters in order to define the population of eligible member events for VBP measures.
2.  Evaluate Health Choice adjudicated claims in order to create a data model for the measurement and validation of VBP eligible member events.
3.  Compare Health Choice VBP Quality Rosters to Health Choice adjudicated claims in order to confirm or deny the reported discrepancy in FUH7 eligible member events.

***Clearly understand how action can be taken based on outcomes***

The results of this report will provide evidence of similarities and differences between Health Choice adjudicated claims and the Health Choice VBP Quality reports, and establish whether or not further intervention is necessary.

***Identify the Business Problem***

The problem is that a significant discrepancy between adjudicated claims and VBP reports could artificially inflate, or suppress, the reported performance level of the ACO, and we need to know if that is true.

## Data Understanding

***Identify data sources***

The primary data sources for this project are:

1.  Health Choice VBP (VBP) Quality Roster (QR)
2.  Health Choice adjudicated claims

***What are the formats?***

1.  Value-based Purchasing Quality Roster
    -   Excel (.xlsx) workbook containing a report of the members eligible for VBP HEDIS NCQA measures and their compliance status
    -   PIVOT tables summarizing the performance of Alliance Providers on each measure
    -   Member level data is not immediately viewable, but can be accessed through the data model management feature of Excel.
2.  Adjudicated claims
    -   Queried from Health Choice data warehouse
    -   Data is extracted using SQL and exported to .csv files for processing
    -   Minimal processing is done through SQL

***Key fieldnames and targets***

1.  Value-based Purchasing Quality Report
    -   MemberID
    -   Provider_Shortname
2.  Adjudicated Claims
    -   Health Choice Medicaid ID (\~MemberID)
    -   svccode (Covered Service Code)

## Data Quality

1.  Value-based Purchasing Quality Report
    -   Report quality is very high as it is compiled by Health Choice Business Intelligence staff.

    -   APs are concerned about the completeness of the data set, meaning they are concerned that not all of the eligible members have been counted by Cotivity, and that people who ***are not*** members ***have*** been counted incorrectly.
2.  Adjudicated Claims
    -   Claims data is of the highest quality as it is compiled and reviewed extensively by Health Choice for its own business purposes. The quality of this data is also reviewed by state and federal regulation entities, like AHCCCS.

## Data Preparation

### Health Choice Value-based Purchasing Quality Rosters (VBPQR)

The most recent Value-based Purchasing (VBP) Quality Roster (`r InLineCode$ReportDate`) for each Alliance Provider (AP) was gathered into the folder **(./data/VBPReports/Quality)**. The *Roster* page from the excel data model was extracted from each of the individual reports and compiled into a data frame, ***DataRaw_VBPQR_AllAPsCombined***, that contains the results of all APs. The VBP Report data is cumulative over the VBP measurement year `r InLineCode$MeasurementYear` and has a 60 day claims lag, such that the `r InLineCode$ReportDate` VBP QR contains claims adjudicated through `r InLineCode$ClaimsAdjudicatedThrough`.

```{r data_read_VBPQR, include=TRUE, echo=TRUE, message=FALSE, warning=FALSE}
# Import the unaltered VBP report, "Detail" sheet, as received from HCA
# 5/1/23 sheet = "Detail" was change by HCA to sheet = "Roster"
vbp_cbi   <-  read_xlsx("./data/VBPReports/Quality/vbpbhh_report_2023-05-31_94-2880847_Community_Bridges_HCA_BHH_VBP_Quality_Roster.xlsx", sheet = "Roster")
##  vbp_cbi <- vbp_cbi [,-1] 
##  colnames(vbp_cbi) <- c("BCBSAZ Health Choice" ,"...2", "...3", "...4", "...5", "...6", "...7", "...8", "...9")
vbp_cpih  <-  read_xlsx("./data/VBPReports/Quality/vbpbhh_report_2023-05-31_86-0215065_Change_Point_Integrated_Health_HCA_BHH_VBP_Quality_Roster.xlsx", sheet = "Roster")
vbp_lcbhc <-  read_xlsx("./data/VBPReports/Quality/vbpbhh_report_2023-05-31_86-0250938_Little_Colorado_Behavioral_Health_HCA_BHH_VBP_Quality_Roster.xlsx", sheet = "Roster")
vbp_mmhc  <-  read_xlsx("./data/VBPReports/Quality/vbpbhh_report_2023-05-31_86-0214457_Mohave_Mental_Health_HCA_BHH_VBP_Quality_Roster.xlsx", sheet = "Roster")
vbp_ph    <-  read_xlsx("./data/VBPReports/Quality/vbpbhh_report_2023-05-31_86-0206928_Polara_Health_HCA_BHH_VBP_Quality_Roster.xlsx", sheet = "Roster")
vbp_sbhs  <-  read_xlsx("./data/VBPReports/Quality/vbpbhh_report_2023-05-31_86-0290033_Southwest_Behavioral_Health_HCA_BHH_VBP_Quality_Roster.xlsx", sheet = "Roster")
vbp_shg   <-  read_xlsx("./data/VBPReports/Quality/vbpbhh_report_2023-05-31_86-0207499_Spectrum_Health_Group_HCA_BHH_VBP_Quality_Roster.xlsx", sheet = "Roster")
vbp_tgc   <-  read_xlsx("./data/VBPReports/Quality/vbpbhh_report_2023-05-31_86-0223720_The_Guidance_Center_HCA_BHH_VBP_Quality_Roster.xlsx", sheet = "Roster")

# Pro Tip
# if any of the tables pick up rogue columns...
# vbp_cbi <- vbp_cbi [,-1] 
# colnames(vbp_cbi) <- c("BCBSAZ Health Choice" ,"...2", "...3", "...4", "...5", "...6", "...7", "...8", "...9")

# Bind the Details sheet from all providers into one table
DataRaw_VBPQR_AllAPsCombined <- rbind(
  vbp_cbi,
  vbp_cpih,
  vbp_lcbhc,
  vbp_mmhc,
  vbp_ph,
  vbp_sbhs,
  vbp_shg,
  vbp_tgc
)

# # write to csv
# date of file = date of VBP QR report
# write.csv(DataRaw_VBPQR_AllAPsCombined, "./data/output/VBPMeasurementValidation/2023-05-31_DataRaw_VBPQR_AllAPsCombined.csv")
```

The Table, ***DataRaw_VBPQR_AllAPsCombined,*** is then transformed in order to remove superfluous white space and other text and table titles that were imported by default. The key transformations are:

-   Remove superfluous rows that contain tables names and descriptions.

-   Promote data from the row with the column names [Row 6] into the column headers.

-   Complete the removal of superfluous rows by filtering the *NA* from the *Gap Status* variable.

-   Create a variable for Provider Shortnames.

-   Store the transformed data as ***VBPQR_AllAPsCombined_Cleaned***

The resulting table is a complete, cleaned roster of all of the individual member events, for all of the VBP Measures, for all of the Alliance Providers.

***This table is used to construct the VBP Quality Report Dashboard as well as the Alliance Progress Report***

```{r transform_MasterVBP, include=TRUE, echo=TRUE, message=FALSE, warning=FALSE}
# create a safe copy of the original data
VBPQR_AllAPsCombined_Cleaned <- DataRaw_VBPQR_AllAPsCombined

# Filter out superfluous rows of nonsense data
VBPQR_AllAPsCombined_Cleaned <- VBPQR_AllAPsCombined_Cleaned |>  
  filter(`...2` != "NA")

# Set column names to headers, which get imported on row 1 #5/2/23 - updated from "6" 
colnames(VBPQR_AllAPsCombined_Cleaned) <- VBPQR_AllAPsCombined_Cleaned [1,] 

# Remove the first row of data that headers
VBPQR_AllAPsCombined_Cleaned <- VBPQR_AllAPsCombined_Cleaned[-1,]

# 5/1/23 - Create SubMeasureID
VBPQR_AllAPsCombined_Cleaned$`SubMeasure ID` <- substr(VBPQR_AllAPsCombined_Cleaned$Measure, 1, 3)

# # set date format for report date
# VBPQR_AllAPsCombined_Cleaned$`Data Period` <- as.numeric(VBPQR_AllAPsCombined_Cleaned$`Data Period`)
# VBPQR_AllAPsCombined_Cleaned$`Data Period` <- as.Date(VBPQR_AllAPsCombined_Cleaned$`Data Period`, origin = "1899-12-30")
# # update data types
# VBPQR_AllAPsCombined_Cleaned$Numerator <- as.numeric(VBPQR_AllAPsCombined_Cleaned$Numerator)
# VBPQR_AllAPsCombined_Cleaned$TotalEligible <- as.numeric(VBPQR_AllAPsCombined_Cleaned$Denominator)
```

The data in the variable *Health Home Name* was used to create a new vector of names called *Provider_Shortname*, and then filtered to only include Alliance Providers (CBI, CPIH, EHS, LCBHC, MMHC, Polara, SBHS, SHG, TGC).

Finally, the *SubMeasureID* variable was filtered to only include the *FUH7* measure, and a list of the Member IDs was selected. 

A copy of the file ***VBPQR_AllAPsCombined_Cleaned,*** was stored as ***VBPQR_AllAPsCombined_Cleaned2*** for use later.

```{r transform_MasterVBP2, include=TRUE, echo=TRUE, message=FALSE, warning=FALSE}
# Create a Provider Shortname
VBPQR_AllAPsCombined_Cleaned <- VBPQR_AllAPsCombined_Cleaned |> 
  mutate(Provider_Shortname = ifelse(`Health Home TIN & Name` == "94-2880847 - COMMUNITY BRIDGES", "CBI",
            ifelse(`Health Home TIN & Name` == "86-0215065 - CHANGE POINT INTEGRATED HEALTH", "CPIH", 
                   ifelse(`Health Home TIN & Name` == "86-0250938 - LITTLE COLORADO BEHAVIORAL HEALTH", "LCBHC", 
                          ifelse(`Health Home TIN & Name` == "86-0214457 - MOHAVE MENTAL HEALTH", "MMHC", 
                                 ifelse(`Health Home TIN & Name` == "86-0206928 - POLARA HEALTH", "PH", 
                                        ifelse(`Health Home TIN & Name` == "86-0290033 - SOUTHWEST BEHAVIORAL HEALTH", "SBHS", 
                                               ifelse(`Health Home TIN & Name` == "86-0207499 - SPECTRUM HEALTH GROUP", "SHG",
                                                      ifelse(`Health Home TIN & Name` == "86-0223720 - THE GUIDANCE CENTER", "TGC", NA
        ))))))))) |> 
  drop_na(Provider_Shortname)

# write.csv(VBPQR_AllAPsCombined_Cleaned, "./data/output/VBPMeasurementValidation/VBPQR_AllAPsCombined_Cleaned_complete_2023-05-31.csv")

# write.csv(VBPQR_AllAPsCombined_Cleaned, "C:/Users/KGLtd/OneDrive - The NARBHA Institute/Documents - Data Force/Projects/AllianceIntranetSupport/data/VBPQR_AllAPsCombined_Cleaned_complete.csv")

```

```{r transform_MasterVBP3, include=TRUE, echo=TRUE, message=FALSE, warning=FALSE}
# create a duplicate at this phase to be used in later evaluation
VBPQR_AllAPsCombined_Cleaned2 <- VBPQR_AllAPsCombined_Cleaned |> 
  filter(`SubMeasure ID` == "FUH")

# write.csv(VBPQR_AllAPsCombined_Cleaned2, "./data/output/VBPMeasurementValidation/VBPQR_AllAPsCombined_Cleaned2.csv")

# Isolate member ID for the validation
VBPQR_AllAPsCombined_Cleaned <- VBPQR_AllAPsCombined_Cleaned |> 
  filter(`SubMeasure ID` == "FUH") |> 
  select(`Member ID`)

# write.csv(VBPQR_AllAPsCombined_Cleaned, "./data/output/VBPMeasurementValidation/VBP_Validation.csv")

```

### Health Choice Adjudicated Claims

Claims data was extracted from the Health Choice data warehouse for the period of `r InLineCode$ReportDate`, meaning claims adjudicated through `r InLineCode$ClaimsAdjudicatedThrough` in order to be consistent with the VBP Quality Report date ranges. This data includes adjudicated claims for members of the Norther GSA, ACC health plan, in other words, Alliance Members.

The resulting solution, **(./data/data_original_cat_2022-05-01_IPClaims)**, is exported to .csv and encrypted in the Azure cloud service. The IP Claims data is loaded to the model for analysis. In addition, a data frame was loaded that contains the HEDIS `r InLineCode$HEDISVersion` eligible ICD10 diagnoses for the FUH7 measure.

```{r SQL, eval=FALSE, include=TRUE, echo=TRUE, warning=FALSE, message=FALSE}
-- This is the code to extract IP Claims data from the HCA data warehouse
-- Updated 5/2/23 by JRK

-- Declare Date Range
Declare @start as date = '01-01-2023'
Declare @end as date = '12-31-2023'

SELECT vos.PrimaryID AS VOS_primaryId
	, id.primaryId AS GM_primaryId
	, id.AzAhcccsId
	, id.BCBSMedicaidId AS MemberID
	, id.lastName
	, id.firstName
	, id.dob
	, id.sex
	, vos.Age
	, vos.MemberZipcode
	, vos.begDate
	, vos.endDate
	, vos.svccode
	, vos.ProcedureCode
	, vos.RevCode
	, vos.Placesvc
	, vos.ProviderType
	, vos.PrimaryDiagnosis
	, vos.Dx1
	, vos.Dx2
	, vos.Dx3
	, vos.Dx4
	, vos.Dx5
	, vos.Dx6
	, vos.Dx7
	, vos.Dx8
	, vos.Dx9
	, vos.Dx10
	, vos.Dx11
	, vos.Dx12
	, vos.ProviderName
	, vos.RenderingProviderNpi
	, vos.PCPName
	, vos.calcnetpd
	, vos.ra

FROM
claims.dbo.shcavos vos
LEFT OUTER JOIN GlobalMembers.dbo.ClientIdPlus id ON vos.primaryId = id.primaryId

WHERE vos.EncounterStatus = 'AP'
AND vos.EncounterStatusDate BETWEEN @start and @end
AND vos.begDate >= @start
AND MemberACCGSA = 'North'
AND vos.svcCode IN ('99357','99356','99255','99254','99253'
				,'99252','99251','99239','99238','99236'
				,'99235','99234','99233','99232','99231'
				,'99222','99221','99220','99219','99218'
				,'99217','92223','0114','0124','0134'
				,'0154','0116','0126','0136','0156','0110'
				,'0111','0112','0113','0120','0121','0122'
				,'0123','0130','0131','0132','0133','0150'
				,'0151','0152','0153','0160','0200','0201'
				,'0202','0203','0206','0209','0210','0115'
				,'0117','0118','0116','0125','0127','0128'
				,'0129','0135','0137','0138','0139','0155'
				,'0157','0158','0159','0164','0167','0163'
				,'0190','0191','0192','0193','0194','0199'
				,'0204','0207','0208','0211','0212','0213'
				,'0214','0219')

GROUP BY vos.PrimaryID
	, id.primaryId
	, id.AzAhcccsId
	, id.BCBSMedicaidId
	, id.lastName
	, id.firstName
	, id.dob
	, id.sex
	, vos.Age
	, vos.MemberZipcode
	, vos.begDate
	, vos.endDate
	, vos.svccode
	, vos.ProcedureCode
	, vos.RevCode
	, vos.Placesvc
	, vos.ProviderType
	, vos.PrimaryDiagnosis
	, vos.Dx1
	, vos.Dx2
	, vos.Dx3
	, vos.Dx4
	, vos.Dx5
	, vos.Dx6
	, vos.Dx7
	, vos.Dx8
	, vos.Dx9
	, vos.Dx10
	, vos.Dx11
	, vos.Dx12
	, vos.ProviderName
	, vos.RenderingProviderNpi
	, vos.PCPName
	, vos.primaryDiagnosis
	, calcnetpd
	, vos.ra
```

```{r data_IPClaims, include=TRUE, echo=TRUE, warning=FALSE, message=FALSE}
IPClaims <- read_xlsx("./data/data_original_cat_2023-03-31_IPClaims.xlsx", sheet = "Sheet1")
MHDxCodes <- read.csv("./data/data_reference_MHDxCodes.csv")
```

The IPClaims data was transformed in the following ways to prepare it for analysis:

```{r transform_IPClaims1, include=TRUE, echo=TRUE, warning=FALSE, message=FALSE}
# Create Vector for Provider Shortname
Provider_ShortName <- (c("CBI", "CPIH", "EHS", "LCBHC", "MMHC", "SHG", "SBH", "TGC", "Polara"))
# Create a vector of ICD10 codes for behavioral health
MH_Dx <- MHDxCodes$Code
# Transform data
IPClaims_Summary <- IPClaims |> 
  filter(ra %in% Provider_ShortName) |> 
  mutate(Elig_MHDx = if_else(PrimaryDiagnosis %in% MH_Dx, PrimaryDiagnosis,
                             if_else(Dx1 %in% MH_Dx, Dx1,
                                     if_else(Dx2 %in% MH_Dx, Dx2,
                                             if_else(Dx3 %in% MH_Dx, Dx3,
                                                     if_else(Dx4 %in% MH_Dx, Dx4,
                     if_else(Dx5 %in% MH_Dx, Dx5,
                             if_else(Dx6 %in% MH_Dx, Dx6,
                                     if_else(Dx7 %in% MH_Dx, Dx7,
                                             if_else(Dx8 %in% MH_Dx, Dx8,
                                                     if_else(Dx9 %in% MH_Dx, Dx9,
                     if_else(Dx10 %in% MH_Dx, Dx10,
                             if_else(Dx11 %in% MH_Dx, Dx11,
                                     if_else(Dx12 %in% MH_Dx, Dx12, "NotBH"
                                     )))))))))))))) |> 
  filter(Elig_MHDx != "NotBH") 

# write.csv(IPClaims_Summary, "./data/output/VBPMeasurementValidation/IPClaims_Summary.csv")
  
```

1.  IPClaims are filtered to only include Alliance Providers. There were `r nrow(IPClaims_Summary)` claims that were assigned to APs.

2.  IPClaims are then filtered to include only those that have a qualifying HEDIS `r InLineCode$HEDISVersion` eligible inpatient code, using ***IP_Code_CPT*** and ***IP_Code_UBREV***, AND an associated eligible HEDIS `r InLineCode$HEDISVersion` mental health ICD10 diagnostic code, from ***data_reference_MHDxCodes***, in any of the diagnosis variables in the claim. There are 13 variables for diagnoses, from *Primary Diagnosis* to *Dx12*.

3.  The resulting table is ***IPClaims_Summary***

    A.  The resulting table contains all of the claims from Health Choice adjudicated claims, for those cases where there was an eligible FUH7 Inpatient code, AND and eligible Mental Health Diagnosis code, within the VBP reporting period.

The variables *MemberID* and *svccode* were selected into a separate data frame, called ***IPClaims_Validation*** for further analysis.

```{r transform_IPClaims2, include=TRUE, echo=TRUE, warning=FALSE, message=FALSE}

IPClaims_validation <- IPClaims_Summary |> 
  select(MemberID,
         svccode)

# write.csv(IPClaims_validation, "./data/output/VBPMeasurementValidation/IPClaims_Validation.csv")

```

## Modeling

### Select Modeling Techniques

***Conceptual Model***

The model will compare health plan ***adjudicated claims*** and VBPQR ***eligible member events*** in order to highlight similarities and differences between Health Choice adjudicated claims and VBP Quality Reports. The model will describe the results in the context of performance measurement of FUH7. This model will help to define the systems surrounding measurement of FUH7.

***Logical Model***

This model outlines the logical rules and data structures that can be used to measure and validate performance across entities. This model extracts relevant data from individual VBP Quality Reports and aggregates them into a single data frame containing all records for all Alliance Providers. It also queries the Health Choice data warehouse to build data frames containing inpatient claims. Validation of the VBP reported member events against adjudicated claims will confirm or deny informal provider observation of discrepancy.

### Generate Test Design

![](data/dataModel/validationDataModel_simplified_Cropped_Phase01.png)

### Build Model

***VBP Quality Roster Reports***

***The VBPQR_AllAPsCombined_Cleaned*** data frame was loaded to the test model. The data was summarized, per member, by counting the instances of eligibility per member. This creates a vector of unduplicated Member IDs called ***VBP_Unduplicated***.

```{r data_testVBP2, include=TRUE, echo=TRUE, message=FALSE, warning=FALSE}
VBP_Unduplicated <- VBPQR_AllAPsCombined_Cleaned |> 
  group_by(`Member ID`) |> 
  rename("MemberID" = `Member ID`) |> 
  count()

# write.csv(VBP_Unduplicated, "./data/output/VBPMeasurementValidation/VBP_Unduplicated.csv")
```

***Claims***

The ***IPClaims_validation*** data frame was loaded to the test model. The claims data was then summarized by counting the instances of HEDIS My2022 eligible claims per member. This creates a vector of unduplicated Member IDs called ***Claims_Unduplicated***.

```{r data_testClaims2, include=TRUE, echo=TRUE, message=FALSE, warning=FALSE}
IPClaims_Unduplicated <- IPClaims_validation |> 
  filter(MemberID != "NULL") |> 
  group_by(MemberID) |> 
  count()

# write.csv(IPClaims_Unduplicated, "./data/output/VBPMeasurementValidation/IPClaims_Unduplicated.csv")
```

***Merge VBPQR and IPClaims Data to One Table***

The ***VBP_Unduplicated*** and the ***Claims_Unduplicated*** were full outer joined, meaning that all rows of data from both variables are included, regardless of match, on the variable *MemberID*. The resulting data frame is called ***Validation_Matrix***.

-   This table contains all of the unduplicated VBPQR MemberIDs, AND all of the unduplicated Claims MemberIDs

-   The data is assessed for cases where a VBP MemberID is validated against a Claims MemberID

    -   A positive result is called "Match", and a negative result is called "NoMatch"

```{r data_ValidationMatrix, include=TRUE, echo=TRUE, message=FALSE, warning=FALSE}
Validation_Matrix <- 
  merge(x = VBP_Unduplicated,
        y = IPClaims_Unduplicated,
        by = "MemberID",
        all = TRUE) |> 
  rename("VBP" = n.x,
         "claims" = n.y) |> 
  mutate(Match = if_else((is.na(VBP) | is.na(claims)), "NoMatch", "Match"))

# write.csv(Validation_Matrix, "./data/output/VBPMeasurementValidation/ValidationMatrix.csv")
```

### Assess Model

***VBP Reports***

-   **8** VBP report details sheets were imported, merged and cleaned, creating ***DataRaw_VBPQR_AllAPsCombined*** with `r nrow(DataRaw_VBPQR_AllAPsCombined)` observations of `r ncol(DataRaw_VBPQR_AllAPsCombined)` variables.

-   ***VBPQR_AllAPsCombined_Cleaned*** was created from the master to isolate instances of FUH7, and then select for *Member ID*, ultimately yielding `r nrow(VBPQR_AllAPsCombined_Cleaned)` observations of MemberIDs.

***Claims***

-   Adjudicated claims with qualifying HEDIS My2022 inpatient service codes are queried from Health Choice data warehouse and read in as ***IPClaims***, with `r nrow(IPClaims)` observations of `r ncol(IPClaims)` variables.

-   ***IPClaims*** is filtered to only include Alliance Providers, and only observations with a qualifying mental health diagnosis. *MemberID* and *svccode*, are selected ultimately yielding a table called ***IPClaims_validation*** with `r nrow(IPClaims_validation)` observations.

***Validation Matrix***

-   The ***Validation_Matrix*** was created by reducing each of ***VBPQR_AllAPsCombined_Cleaned*** and ***IPClaims_validation*** to unduplicated observations of each *MemberID*, and then full outer joining them on *MemberID* yielding a table with `r nrow(Validation_Matrix)` observations of `r ncol(Validation_Matrix)` variables.

***The Validation_Matrix is the table that will be used for evaluation! Phew! :)***

## Evaluation

```{r eval_ValidationSummary, include=TRUE, echo=TRUE, message=FALSE, warning=FALSE}
Validation_Summary <- Validation_Matrix |> 
  group_by(Match) |> 
  count()

# write.csv(Validation_Summary, "./data/output/VBPMeasurementValidation/Validation_Summary.csv")

```

### Validating VBP Reports and Claims

The ***VBP_Unduplicated*** and the ***Claims_Unduplicated*** were observed from left to right, meaning that all observations of data from ***VBP_Unduplicated*** are included, while ***Claims_Unduplicated*** are only included if matched with ***VBP_Unduplicated*** on the variable *Member ID*.

-   `r Validation_Matrix |> filter(Match == "Match") |> count()` of the `r nrow(Validation_Matrix)` (`r Validation_Matrix |> filter(Match == "Match") |> count() / nrow(Validation_Matrix)`)VBP members were validated against an eligible IP member, with `r Validation_Matrix |> filter(Match == "NoMatch") |> count()` (`r Validation_Matrix |> filter(Match == "NoMatch") |> count() / nrow(Validation_Matrix)`) not matched.

## Results

### Creation of FUH7 Member Follow Up List

The ***Validation_Matrix*** was transformed and rejoined with ***IPClaims_Summary*** to create a table that will be used to generate Member Follow Up Lists. This new table is called ***MemberFollowUpList***.

***MemberFollowUpList is the table that is used for creating the Member Follow Up List*** for the *FUH7* measure.

```{r ValidatedVBPMembers, include=TRUE, echo=TRUE, message=FALSE, warning=FALSE}
# seperate the match list from the no match list

ValidatedVBPMembers <- Validation_Matrix |> 
  filter(Match == "Match")
  
ValMat_NoMatch <- Validation_Matrix |> 
  filter(Match == "NoMatch")

# Using the copy of VBPQR_AllAPsCombined_Cleaned we made above, rename MemberID to match
VBPQR_AllAPsCombined_Cleaned2 <- VBPQR_AllAPsCombined_Cleaned2 |>
  rename("MemberID" = `Member ID`)

# Rejoin the matched and non-matched MemberIDs to their claims data
ValidatedVBPMembers <- 
   merge(x = ValidatedVBPMembers,
        y = IPClaims_Summary,
        by = "MemberID",
        all.x = TRUE) |>
  drop_na(Match)

# write.csv(ValidatedVBPMembers,"./data/output/VBPMeasurementValidation/ValidatedVBPMembers.csv")

ValMat_NoMatch <- 
   merge(x = ValMat_NoMatch,
        y = VBPQR_AllAPsCombined_Cleaned2,
        by = "MemberID",
        all.x = TRUE) |>
  drop_na(Match)

# write.csv(ValMat_NoMatch,"./data/output/VBPMeasurementValidation/ValMat_NoMatch.csv")

MemberFollowUpList <- 
   merge(x = Validation_Matrix,
        y = IPClaims_Summary,
        by = "MemberID",
        all = TRUE) |>
  drop_na(Match)

# write.csv(MemberFollowUpList,"./data/output/VBPMeasurementValidation/FUH7_MemberFollowUpList.csv")

# write.csv(MemberFollowUpList,"C:/Users/KGLtd/OneDrive - The NARBHA Institute/Documents - Data Force/Projects/AllianceIntranetSupport/data/FUH7_MemberFollowUpList.csv")
```

### Evaluation of Validated Data

The results of those members that were validated against an adjudicated claim were evaluated in several ways, including all eligible FUH7 eligible IP Claims (ValidatedVBPMembers):

1.  By provider type:

**Top 10 Provider Types**
```{r ProviderTypeTable, include=TRUE, echo=TRUE, message=FALSE, warning=FALSE}

ValidatedVBPMembers |> 
  group_by(ProviderType) |> 
  count() |> 
  arrange(- n) |> 
  head(10) |> 
  kable()

``` 
    
2.  By service code:

**Top 10 Service Codes**
```{r Service Code Table, include=TRUE, echo=TRUE, message=FALSE, warning=FALSE}

ValidatedVBPMembers |> 
  group_by(svccode) |> 
  count() |> 
  arrange(- n) |> 
  head(10) |> 
  kable()

```    

3.  By age:
    -   Many different ages between age 7 and 79
    -   Histogram below is for all validated member events

**Histogram of Ages**
```{r ValidatedVBPMembers2, include=TRUE, echo=TRUE, message=FALSE, warning=FALSE}

# Group by age
# ValidatedVBPMembers |> group_by(Age) |> nrow()

hist(ValidatedVBPMembers$Age)
```

4.  By Diagnosis:

    -   That is too many distinct diagnoses for this evaluation, so diagnoses were grouped into ICD 10 mental health groupings (see table below).

    -   F30-39 (Mood Disorders) and F20-29 (Psychotic Disorders) were most common.

    -   Previous studies have also noted the high proportion of Mood Disorders among inpatient services.

```{r ICD10Groupings, include=TRUE, echo=TRUE, message=FALSE, warning=FALSE}
# Group by Diagnostic Grouping
# Load ICD10 groupings to the model
ICD10Groupings <- read.csv("./data/dataModel/ICD10andBHGroupingsCombined.csv")

# Create column with first found BHDx
VMMwithDxGroupings <- ValidatedVBPMembers |> 
  mutate(Elig_MHDx = if_else(PrimaryDiagnosis %in% MH_Dx, PrimaryDiagnosis,
                             if_else(Dx1 %in% MH_Dx, Dx1,
                                     if_else(Dx2 %in% MH_Dx, Dx2,
                                             if_else(Dx3 %in% MH_Dx, Dx3,
                                                     if_else(Dx4 %in% MH_Dx, Dx4,
                                                             if_else(Dx5 %in% MH_Dx, Dx5,
                                                                     if_else(Dx6 %in% MH_Dx, Dx6,
                                                                             if_else(Dx7 %in% MH_Dx, Dx7,
                                                                                     if_else(Dx8 %in% MH_Dx, Dx8,
                                                                                             if_else(Dx9 %in% MH_Dx, Dx9,
                                                                                                     if_else(Dx10 %in% MH_Dx, Dx10,
                                                                                                             if_else(Dx11 %in% MH_Dx, Dx11,
                                                                                                                     if_else(Dx12 %in% MH_Dx, Dx12, "NotBH"                                                                             ))))))))))))))
# Group by Dx
# ValidatedVBPMembers |> group_by(Elig_MHDx) |> count()

VMMwithDxGroupings <- ValidatedVBPMembers |> 
  separate(col = Elig_MHDx,
           into = c("primaryDiagnosisSimplified", "DxSuffix"))

VMMwithDxGroupings <- merge(
  x = VMMwithDxGroupings,
  y = ICD10Groupings,
  by = "primaryDiagnosisSimplified"
)

# write.csv(VMMwithDxGroupings, "./data/output/VBPMeasurementValidation/ValidatedVBPMembers_withDxGrouping.csv")

VMMbyDiagnosisGroupRange <- VMMwithDxGroupings |> group_by(DiagnosisGroupRange) |> count()

# write.csv(VMMbyDiagnosisGroupRange, "./data/output/VBPMeasurementValidation/VMMbyDiagnosisGroupRange.csv")
```

**Diagnostic Group Ranges**
```{r DXGroupTable, include=TRUE, echo=TRUE, message=FALSE, warning=FALSE}

kable(VMMbyDiagnosisGroupRange)

```

### Analysis of impact on false eligible member events:

Overall Compliance of All Reported VBP QR Events (Comp_ChiSq):

```{r ChiSq, include=TRUE, echo=TRUE, message=FALSE, warning=FALSE}
# transform VBP_Rep_Comp for compliance
Compliance <-
  merge(x = Validation_Matrix,
        y = VBPQR_AllAPsCombined_Cleaned2,
        by = "MemberID",
        all.y = TRUE)

colnames(Compliance)[6] <- "Gap_Status"
#####
# write.csv(Compliance, "./data/output/VBPMeasurementValidation/Compliance.csv")

write.csv(Compliance, "C:/Users/RyanK/OneDrive - The NARBHA Institute/Documents - Data Force/Projects/AllianceIntranetSupport/data/Compliance.csv")
```

-   `r Compliance |> filter(Gap_Status == "OPEN") |> nrow()` Non-Compliant

-   `r Compliance |> filter(Gap_Status == "CLOSED") |> nrow()` Compliant

Compliance by VBP Members Matched with Claim:

-   `r Compliance |> filter(Gap_Status== "OPEN" & Match == "Match") |> nrow()`: Matched, NonCompliant(MNC)

-   `r Compliance |> filter(Gap_Status== "CLOSED" & Match == "Match") |> nrow()`: Matched, Compliant (MC)

-   `r Compliance |> filter(Gap_Status== "OPEN" & Match == "NoMatch") |> nrow()`: NonMatched, NonCompliant (NMNC)

-   `r Compliance |> filter(Gap_Status== "CLOSED" & Match == "NoMatch") |> nrow()`: NonMatched, Compliant (NMC)

**Chi Squared Test:**

Q: What is the impact of the non-Matched member events?

Chi squared test was run at alpha = .05. The Pearson's chi-squared test can be used to confirm if there is a significant difference between the expected result and the observed result in this comparison.

```{r ChiSq2, include=TRUE, echo=TRUE, message=FALSE, warning=FALSE}
# transform for Chi Squared test
Comp_ChiSq <- Compliance |> 
    select(Match, Gap_Status) |> 
  group_by(Match, Gap_Status) |>
  #mutate(Numerator = as.character(Numerator)) |> 
  count() |> 
  pivot_wider(names_from = "Gap_Status",
              values_from = "n")
  # mutate(`0` = as.double(`0`),
  #        `1` = as.double(`1`))

# write.csv(Comp_ChiSq, "./data/output/VBPMeasurementValidation/Comp_ChiSq.csv")
```

**Chi Squared Test Result**
```{r ChiSq3, include=TRUE, echo=TRUE, message=FALSE, warning=FALSE}
chisq.test(Comp_ChiSq[-1], correct = FALSE)

```

# Results

There is a significant difference (X^2 (1, N = 242) = 5.08, p < .05) between the HC VBP Quality Roster and HC Adjudicate claims. 

**This means that the validity of the HCA Value Based Purchasing Quality Roster (VBPQR) is not strong enough to draw inferences from the data.** 

```{r Fig_ChiSq, include=TRUE, echo=TRUE, message=FALSE, warning=FALSE}

Compliance |> 
  select(Match, Gap_Status) |> 
  group_by(Match, Gap_Status) |>
  mutate(Numerator = if_else(Gap_Status == "OPEN", "NonCompliant", "Compliant")) |> 
  count() |> 
ggplot(aes(fill=Match, x=Gap_Status, y=n)) +
  geom_col() +
  scale_fill_manual(values = c(Match = "#5e0932", NoMatch = "#119ec0"))+
  labs(title = "VBP Report Member Event Validation",
       subtitle = "Distinct member validation against adjudicated claims",
       caption = "*From claims adjudicated through April 27, 2023") +
  ylab("Number of Distinct Members") +
  xlab("FUH7 Compliance Status")+
theme_get()+
  theme(
    axis.title.y = element_text(vjust = 2),
    plot.subtitle = element_text(face = "italic"),
    plot.caption = element_text(face = "bold.italic", hjust = 0, vjust = -1)
  )



```

# Conclusion

The topic became of serious concern to The Alliance very early in our operations. The concern over data validity was prominent among all of the Alliance Providers, and it appeared as though the issue had been persistent for some time. The original Value Based Purchasing Data Validation Model was conducted based on the measurement year (2022-01-01 to 2022-12-31), and on the data product of Arcadia[^8]. That research revealed a significant impact of invalid data and an under-reporting of positive performance. 

There a significant variance in the data indicated a disproportionate frequency of non-validated, non-compliant member events. 

**In other words, the Alliance and its providers are being underrated by the HC Value Based Purchasing Quality Roster as evidenced by Health Choice Adjudicated Claims.**

Further investigation into this data is required in order to validate measurement. Within the Member Follow Up List, only those cases identified as "Match" may be relied upon for validity. 

# Reviews

1.  2023-06-15: Alliance Leadership Meeting
